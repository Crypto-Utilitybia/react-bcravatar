{"version":3,"sources":["../../src/constants.js","../../src/index.js","App.js","index.js"],"names":["infuras","1","4","137","contracts","contractABI","inputs","internalType","name","type","outputs","stateMutability","subgraphs","useBCRAvatar","Web3","infura","network","address","useState","web3","setWeb3","avatar","setAvatar","useEffect","provider","Promise","fetch","method","headers","body","JSON","query","response","contract","metadata","uri","resolve","reject","error","fetchAvatar","console","BCRAvatar","className","placeholder","children","props","classes","styles","href","target","src","useBCRProfile","profile","setProfile","data","fetchProfile","INFURA_ID","address1","address2","shorten","addr","substr","BCRProfileExample","loading","join","stringify","App","id","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12af1980.chunk.js","sourcesContent":["export const infuras = {\n\t1: 'https://mainnet.infura.io/v3/',\n\t4: 'https://rinkeby.infura.io/v3/',\n\t137: 'https://polygon-mainnet.infura.io/v3/',\n};\n\nexport const contracts = {\n\t1: '',\n\t4: '0x5F958E9361397e226468a905508238B634a254C5',\n\t137: '',\n};\n\nexport const contractABI = [\n\t{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'address',\n\t\t\t\tname: 'account',\n\t\t\t\ttype: 'address',\n\t\t\t},\n\t\t],\n\t\tname: 'getAvatar',\n\t\toutputs: [\n\t\t\t{\n\t\t\t\tinternalType: 'string',\n\t\t\t\tname: '',\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t],\n\t\tstateMutability: 'view',\n\t\ttype: 'function',\n\t},\n];\n\nexport const subgraphs = {\n\t1: '',\n\t4: 'https://api.studio.thegraph.com/query/2120/bcravatar-rinkeby/1.1.2',\n\t137: '',\n};\n","import React, { useState, useEffect } from 'react';\nimport { contractABI, infuras, subgraphs, contracts } from './constants';\nimport styles from './styles.module.css';\n\nexport function fetchAvatar(address, network, web3) {\n\treturn new Promise((resolve, reject) =>\n\t\tfetch(subgraphs[network], {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: `{\n\t\t\t\t\tavatars(where: { id: \"${address.toLowerCase()}\" }) {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\turi,\n\t\t\t\t\t\thasNFT\n\t\t\t\t\t}\n\t\t\t\t}`,\n\t\t\t}),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then(({ data: { avatars } }) => avatars[0])\n\t\t\t.then((avatar) => {\n\t\t\t\tif (avatar) {\n\t\t\t\t\tif (avatar.hasNFT) {\n\t\t\t\t\t\tconst contract = new web3.eth.Contract(\n\t\t\t\t\t\t\tcontractABI,\n\t\t\t\t\t\t\tcontracts[network]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontract.methods\n\t\t\t\t\t\t\t.getAvatar(address)\n\t\t\t\t\t\t\t.call()\n\t\t\t\t\t\t\t.then((uri) => {\n\t\t\t\t\t\t\t\tfetch(uri)\n\t\t\t\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t\t\t\t.then((metadata) => {\n\t\t\t\t\t\t\t\t\t\tif (metadata.image || metadata.image_url) {\n\t\t\t\t\t\t\t\t\t\t\tconst uri = metadata.image || metadata.image_url;\n\t\t\t\t\t\t\t\t\t\t\tresolve([uri, avatar.uri !== uri]);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tresolve([avatar.uri, false]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(() => resolve([avatar.uri, false]));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(() => resolve([avatar.uri, false]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve([avatar.uri, false]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treject({ error: 'No Avatar' });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(reject)\n\t);\n}\n\nexport function useBCRAvatar({ Web3, infura, network, address }) {\n\tconst [web3, setWeb3] = useState(null);\n\tconst [avatar, setAvatar] = useState([null, false]);\n\n\tuseEffect(() => {\n\t\tif (!infura || !contracts[network]) return;\n\t\tconst provider =\n\t\t\ttypeof infura === 'object' || !infuras[network]\n\t\t\t\t? infura\n\t\t\t\t: `${infuras[network]}${infura}`;\n\t\tif (web3) {\n\t\t\tweb3.setProvider(provider);\n\t\t} else {\n\t\t\tsetWeb3(new Web3(provider));\n\t\t}\n\t}, [infura, network]);\n\n\tuseEffect(() => {\n\t\tif (!address || !web3) return;\n\t\tfetchAvatar(address, network, web3)\n\t\t\t.then(setAvatar)\n\t\t\t.catch((err) => console.log('Error: Fetch Avatar', err));\n\t}, [address, network, web3]);\n\n\treturn avatar;\n}\n\nexport function BCRAvatar({\n\tWeb3,\n\tinfura,\n\tnetwork,\n\taddress,\n\tclassName = '',\n\tplaceholder = 'https://ipfs.io/ipfs/QmVaFasJTocvnuEobz7HkRpADB82z5gYA2xuZrgYFmMoQz',\n\tchildren,\n\t...props\n}) {\n\tconst [avatar, isNFT] = useBCRAvatar({\n\t\tWeb3,\n\t\tinfura,\n\t\tnetwork,\n\t\taddress,\n\t});\n\tconst classes = [\n\t\tisNFT ? 'bcravatar is-nft' : 'bcravatar',\n\t\tstyles.bcravatar,\n\t\tclassName,\n\t];\n\n\treturn (\n\t\t<div className={classes.join(' ')} {...props}>\n\t\t\t<a href=\"https://www.bcravatar.com\" target=\"_blank\">\n\t\t\t\t<img className=\"bcravatar__image\" src={avatar || placeholder} />\n\t\t\t</a>\n\t\t\t<div className=\"bcravatar__content\">{children}</div>\n\t\t</div>\n\t);\n}\n\nexport function fetchProfile(address, network) {\n\treturn new Promise((resolve, reject) =>\n\t\tfetch(subgraphs[network], {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: `{\n\t\t\t\t\tprofiles (where: { id: \"${address.toLowerCase()}\" }) {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\turi\n\t\t\t\t\t}\n\t\t\t\t}`,\n\t\t\t}),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then(({ data: { profiles } }) => profiles[0])\n\t\t\t.then((profile) => {\n\t\t\t\tif (profile) {\n\t\t\t\t\tfetch(profile.uri)\n\t\t\t\t\t\t.then((response) => response.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tresolve([data, null]);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t} else {\n\t\t\t\t\treject({ error: 'No Profile' });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(reject)\n\t);\n}\n\nexport function useBCRProfile({ network, address }) {\n\tconst [profile, setProfile] = useState([null, null]);\n\n\tuseEffect(() => {\n\t\tif (!address || !subgraphs[network]) return;\n\t\tfetchProfile(address, network)\n\t\t\t.then(setProfile)\n\t\t\t.catch((err) => setProfile([null, err]));\n\t}, [address, network]);\n\n\treturn profile;\n}\n","import React from 'react';\nimport Web3 from 'web3';\n\nimport { useBCRProfile, BCRAvatar } from 'react-bcravatar';\nimport 'react-bcravatar/dist/index.css';\n\nconst INFURA_ID = '9aa3d95b3bc440fa88ea12eaa4456161';\nconst address1 = '0x23ABfdBd2535aC77ea60a078707a9e5820b0Fff2';\nconst address2 = '0x543812C87700377b7b6D943142Cb57b1b4a05624';\nconst shorten = (addr) => `${addr.substr(0, 6)}...${addr.substr(-4)}`;\n\nfunction BCRProfileExample({\n\tnetwork,\n\taddress,\n\tclassName = '',\n\tplaceholder = 'https://ipfs.io/ipfs/QmVaFasJTocvnuEobz7HkRpADB82z5gYA2xuZrgYFmMoQz',\n\t...props\n}) {\n\tconst [profile, error] = useBCRProfile({\n\t\tnetwork,\n\t\taddress,\n\t});\n\tconst loading = !profile && !error;\n\tconst classes = [error ? 'bcrprofile error' : 'bcrprofile', className];\n\n\treturn (\n\t\t<pre className={classes.join(' ')} {...props}>\n\t\t\t{loading\n\t\t\t\t? 'Loading...'\n\t\t\t\t: error\n\t\t\t\t? JSON.stringify(error, null, 4)\n\t\t\t\t: JSON.stringify(profile, null, 4)}\n\t\t</pre>\n\t);\n}\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"avatar-wrapper\">\n\t\t\t\t<img\n\t\t\t\t\tid=\"logo\"\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/Crypto-Utilitybia/react-bcravatar/main/public/crypto-utilitybia.png\"\n\t\t\t\t\talt=\"Crypto Utilitybia\"\n\t\t\t\t/>\n\t\t\t\t<BCRAvatar\n\t\t\t\t\tWeb3={Web3}\n\t\t\t\t\tinfura={INFURA_ID}\n\t\t\t\t\tnetwork={4}\n\t\t\t\t\taddress={address1}\n\t\t\t\t>\n\t\t\t\t\t{shorten(address1)}\n\t\t\t\t</BCRAvatar>\n\t\t\t</div>\n\t\t\t<div className=\"profile-wrapper\">\n\t\t\t\t<BCRProfileExample infura={INFURA_ID} network={4} address={address1} />\n\t\t\t</div>\n\t\t\t<div className=\"avatar-wrapper\">\n\t\t\t\t<img\n\t\t\t\t\tid=\"logo\"\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/Crypto-Utilitybia/react-bcravatar/main/public/crypto-utilitybia.png\"\n\t\t\t\t\talt=\"Crypto Utilitybia\"\n\t\t\t\t/>\n\t\t\t\t<BCRAvatar\n\t\t\t\t\tWeb3={Web3}\n\t\t\t\t\tinfura={INFURA_ID}\n\t\t\t\t\tnetwork={4}\n\t\t\t\t\taddress={address2}\n\t\t\t\t>\n\t\t\t\t\t{shorten(address2)}\n\t\t\t\t</BCRAvatar>\n\t\t\t</div>\n\t\t\t<div className=\"profile-wrapper\">\n\t\t\t\t<BCRProfileExample infura={INFURA_ID} network={4} address={address2} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}